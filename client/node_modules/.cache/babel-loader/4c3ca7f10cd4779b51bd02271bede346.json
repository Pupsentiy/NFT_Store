{"ast":null,"code":"import * as yup from \"yup\";\nconst EMAIL_REGEXP = /^(?=.{1,64}@)[A-Za-z0-9_-]+(\\\\.[A-Za-z0-9_-]+)*@[^-][A-Za-z0-9-]+(\\\\.[A-Za-z0-9-]+)*(\\\\.[A-Za-z]{2,})$/;\nconst PASSWORD_REGEXP = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,64}$/;\nconst NAME_REGEXP = /^[a-zA-Z][a-zA-Z0-9-_]{1,20}$/;\nexport const emeilSchema = yup.string().email().matches(EMAIL_REGEXP, \"Enter your email\").required(\"Please Enter Your Email!\");\nexport const nameShema = yup.string().typeError(\"должно быть строкой\").matches(NAME_REGEXP, \"First character must be a letter\").required(\"Please Enter Your Name!\");\nexport const passwordShema = yup.string().typeError(\"Должно быть строкой\").matches(PASSWORD_REGEXP, \"Must be at least one letter and one number\").min(8).max(64).required(\"Please Enter Your Password!\");\nexport const confrimPasswordShema = yup.string().oneOf([yup.ref(\"password\"), null], \"Passwords must match\").required(\"Please Enter Your Password!\");\nexport const signUpShema = yup.object().shape({\n  name: nameShema,\n  email: emeilSchema,\n  password: passwordShema,\n  confirmPassword: confrimPasswordShema\n});\nexport const signIn = yup.object().shape({\n  email: emeilSchema,\n  password: passwordShema\n});","map":{"version":3,"names":["yup","EMAIL_REGEXP","PASSWORD_REGEXP","NAME_REGEXP","emeilSchema","string","email","matches","required","nameShema","typeError","passwordShema","min","max","confrimPasswordShema","oneOf","ref","signUpShema","object","shape","name","password","confirmPassword","signIn"],"sources":["/home/pups/git-project/nft_store/client/src/components/auth/validation.ts"],"sourcesContent":["import * as yup from \"yup\";\n\nconst EMAIL_REGEXP =\n  /^(?=.{1,64}@)[A-Za-z0-9_-]+(\\\\.[A-Za-z0-9_-]+)*@[^-][A-Za-z0-9-]+(\\\\.[A-Za-z0-9-]+)*(\\\\.[A-Za-z]{2,})$/;\nconst PASSWORD_REGEXP = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,64}$/;\nconst NAME_REGEXP = /^[a-zA-Z][a-zA-Z0-9-_]{1,20}$/;\n\nexport const emeilSchema = yup\n  .string()\n  .email()\n  .matches(EMAIL_REGEXP, \"Enter your email\")\n  .required(\"Please Enter Your Email!\");\n\nexport const nameShema = yup\n  .string()\n  .typeError(\"должно быть строкой\")\n  .matches(NAME_REGEXP, \"First character must be a letter\")\n  .required(\"Please Enter Your Name!\");\n\nexport const passwordShema = yup\n  .string()\n  .typeError(\"Должно быть строкой\")\n  .matches(PASSWORD_REGEXP, \"Must be at least one letter and one number\")\n  .min(8)\n  .max(64)\n  .required(\"Please Enter Your Password!\");\n\nexport const confrimPasswordShema = yup\n  .string()\n  .oneOf([yup.ref(\"password\"), null], \"Passwords must match\")\n  .required(\"Please Enter Your Password!\");\n\nexport const signUpShema = yup.object().shape({\n  name: nameShema,\n  email: emeilSchema,\n  password: passwordShema,\n  confirmPassword: confrimPasswordShema,\n});\n\nexport const signIn = yup.object().shape({\n  email: emeilSchema,\n  password: passwordShema,\n});\n"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AAEA,MAAMC,YAAY,GAChB,wGADF;AAEA,MAAMC,eAAe,GAAG,0CAAxB;AACA,MAAMC,WAAW,GAAG,+BAApB;AAEA,OAAO,MAAMC,WAAW,GAAGJ,GAAG,CAC3BK,MADwB,GAExBC,KAFwB,GAGxBC,OAHwB,CAGhBN,YAHgB,EAGF,kBAHE,EAIxBO,QAJwB,CAIf,0BAJe,CAApB;AAMP,OAAO,MAAMC,SAAS,GAAGT,GAAG,CACzBK,MADsB,GAEtBK,SAFsB,CAEZ,qBAFY,EAGtBH,OAHsB,CAGdJ,WAHc,EAGD,kCAHC,EAItBK,QAJsB,CAIb,yBAJa,CAAlB;AAMP,OAAO,MAAMG,aAAa,GAAGX,GAAG,CAC7BK,MAD0B,GAE1BK,SAF0B,CAEhB,qBAFgB,EAG1BH,OAH0B,CAGlBL,eAHkB,EAGD,4CAHC,EAI1BU,GAJ0B,CAItB,CAJsB,EAK1BC,GAL0B,CAKtB,EALsB,EAM1BL,QAN0B,CAMjB,6BANiB,CAAtB;AAQP,OAAO,MAAMM,oBAAoB,GAAGd,GAAG,CACpCK,MADiC,GAEjCU,KAFiC,CAE3B,CAACf,GAAG,CAACgB,GAAJ,CAAQ,UAAR,CAAD,EAAsB,IAAtB,CAF2B,EAEE,sBAFF,EAGjCR,QAHiC,CAGxB,6BAHwB,CAA7B;AAKP,OAAO,MAAMS,WAAW,GAAGjB,GAAG,CAACkB,MAAJ,GAAaC,KAAb,CAAmB;EAC5CC,IAAI,EAAEX,SADsC;EAE5CH,KAAK,EAAEF,WAFqC;EAG5CiB,QAAQ,EAAEV,aAHkC;EAI5CW,eAAe,EAAER;AAJ2B,CAAnB,CAApB;AAOP,OAAO,MAAMS,MAAM,GAAGvB,GAAG,CAACkB,MAAJ,GAAaC,KAAb,CAAmB;EACvCb,KAAK,EAAEF,WADgC;EAEvCiB,QAAQ,EAAEV;AAF6B,CAAnB,CAAf"},"metadata":{},"sourceType":"module"}