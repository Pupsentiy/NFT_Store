{"ast":null,"code":"var _jsxFileName = \"/home/pups/git-project/nft_store/client/src/components/search/Search.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useRef, useState } from \"react\";\nimport { setCurrentPage, setSearchValue } from \"../../redux/filter/filterSlice\";\nimport { useAppDispatch } from \"../../redux/store\";\nimport debounce from \"lodash.debounce\";\nimport \"./Search.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const [value, setValue] = useState(\"\");\n  const inputRef = useRef(null);\n\n  const onChangeInput = event => {\n    setValue(event.target.value);\n    updateSearchValue(event.target.value);\n    dispatch(setCurrentPage(1));\n  };\n\n  const updateSearchValue = useCallback(debounce(str => {\n    dispatch(setSearchValue(str));\n  }, 250), []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"search\",\n      placeholder: \"Type your keywords . . .\",\n      onChange: onChangeInput,\n      ref: inputRef,\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Search, \"149u1D7fc3KI8hj0NPVFp9OHBzc=\", false, function () {\n  return [useAppDispatch];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useCallback","useRef","useState","setCurrentPage","setSearchValue","useAppDispatch","debounce","Search","dispatch","value","setValue","inputRef","onChangeInput","event","target","updateSearchValue","str"],"sources":["/home/pups/git-project/nft_store/client/src/components/search/Search.tsx"],"sourcesContent":["import React, { useCallback, useRef, useState } from \"react\";\nimport { setCurrentPage, setSearchValue } from \"../../redux/filter/filterSlice\";\nimport { useAppDispatch } from \"../../redux/store\";\nimport debounce from \"lodash.debounce\";\nimport \"./Search.scss\";\n\nconst Search: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const [value, setValue] = useState<string>(\"\");\n  const inputRef = useRef<HTMLInputElement>(null);\n  \n  const onChangeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n    updateSearchValue(event.target.value);\n    dispatch(setCurrentPage(1))\n  };\n\n  const updateSearchValue = useCallback(\n    debounce((str: string) => {\n      dispatch(setSearchValue(str));\n    }, 250),\n    []\n  );\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        className=\"search\"\n        placeholder=\"Type your keywords . . .\"\n        onChange={onChangeInput}\n        ref={inputRef}\n        value={value}\n      />\n    </>\n  );\n};\n\nexport default Search;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,MAA7B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,gCAA/C;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAO,eAAP;;;;AAEA,MAAMC,MAAgB,GAAG,MAAM;EAAA;;EAC7B,MAAMC,QAAQ,GAAGH,cAAc,EAA/B;EACA,MAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAS,EAAT,CAAlC;EACA,MAAMS,QAAQ,GAAGV,MAAM,CAAmB,IAAnB,CAAvB;;EAEA,MAAMW,aAAa,GAAIC,KAAD,IAAgD;IACpEH,QAAQ,CAACG,KAAK,CAACC,MAAN,CAAaL,KAAd,CAAR;IACAM,iBAAiB,CAACF,KAAK,CAACC,MAAN,CAAaL,KAAd,CAAjB;IACAD,QAAQ,CAACL,cAAc,CAAC,CAAD,CAAf,CAAR;EACD,CAJD;;EAMA,MAAMY,iBAAiB,GAAGf,WAAW,CACnCM,QAAQ,CAAEU,GAAD,IAAiB;IACxBR,QAAQ,CAACJ,cAAc,CAACY,GAAD,CAAf,CAAR;EACD,CAFO,EAEL,GAFK,CAD2B,EAInC,EAJmC,CAArC;EAOA,oBACE;IAAA,uBACE;MACE,IAAI,EAAC,MADP;MAEE,SAAS,EAAC,QAFZ;MAGE,WAAW,EAAC,0BAHd;MAIE,QAAQ,EAAEJ,aAJZ;MAKE,GAAG,EAAED,QALP;MAME,KAAK,EAAEF;IANT;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAYD,CA9BD;;GAAMF,M;UACaF,c;;;KADbE,M;AAgCN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}