{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { fetchItems } from \"./asyncActions\";\nimport { Status } from \"./types\";\nconst initialState = {\n  items: [],\n  status: Status.LOADING\n};\nconst cardsSlice = createSlice({\n  name: \"card\",\n  initialState,\n  reducers: {\n    setItems(state, action) {\n      state.items = action.payload;\n    }\n\n  },\n  extraReducers: {\n    [fetchItems.pending.type]: state => {\n      state.status = Status.LOADING;\n      state.items = [];\n    },\n    [fetchItems.fulfilled.type]: (state, action) => {\n      state.items = action.payload;\n      state.status = Status.SUCCESS;\n    },\n    [fetchItems.rejected.type]: state => {\n      state.status = Status.ERROR;\n      state.items = [];\n    }\n  }\n});\nexport const {\n  setItems\n} = cardsSlice.actions;\nexport default cardsSlice.reducer;","map":{"version":3,"names":["createSlice","fetchItems","Status","initialState","items","status","LOADING","cardsSlice","name","reducers","setItems","state","action","payload","extraReducers","pending","type","fulfilled","SUCCESS","rejected","ERROR","actions","reducer"],"sources":["/home/pups/git-project/nft_store/client/src/redux/cards/slice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { fetchItems } from \"./asyncActions\";\nimport { Cards, CardsSliceState, Status } from \"./types\";\n\nconst initialState: CardsSliceState = {\n  items: [],\n  status: Status.LOADING,\n};\n\nconst cardsSlice = createSlice({\n  name: \"card\",\n  initialState,\n  reducers: {\n    setItems(state, action: PayloadAction<Cards[]>) {\n      state.items = action.payload;\n    },\n  },\n  extraReducers: {\n    [fetchItems.pending.type]: (state) => {\n      state.status = Status.LOADING;\n      state.items = [];\n    },\n\n    [fetchItems.fulfilled.type]: (state, action) => {\n      state.items = action.payload;\n      state.status = Status.SUCCESS;\n    },\n\n    [fetchItems.rejected.type]: (state) => {\n      state.status = Status.ERROR;\n      state.items = [];\n    },\n  },\n});\n\nexport const { setItems } = cardsSlice.actions;\n\nexport default cardsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAAiCC,MAAjC,QAA+C,SAA/C;AAEA,MAAMC,YAA6B,GAAG;EACpCC,KAAK,EAAE,EAD6B;EAEpCC,MAAM,EAAEH,MAAM,CAACI;AAFqB,CAAtC;AAKA,MAAMC,UAAU,GAAGP,WAAW,CAAC;EAC7BQ,IAAI,EAAE,MADuB;EAE7BL,YAF6B;EAG7BM,QAAQ,EAAE;IACRC,QAAQ,CAACC,KAAD,EAAQC,MAAR,EAAwC;MAC9CD,KAAK,CAACP,KAAN,GAAcQ,MAAM,CAACC,OAArB;IACD;;EAHO,CAHmB;EAQ7BC,aAAa,EAAE;IACb,CAACb,UAAU,CAACc,OAAX,CAAmBC,IAApB,GAA4BL,KAAD,IAAW;MACpCA,KAAK,CAACN,MAAN,GAAeH,MAAM,CAACI,OAAtB;MACAK,KAAK,CAACP,KAAN,GAAc,EAAd;IACD,CAJY;IAMb,CAACH,UAAU,CAACgB,SAAX,CAAqBD,IAAtB,GAA6B,CAACL,KAAD,EAAQC,MAAR,KAAmB;MAC9CD,KAAK,CAACP,KAAN,GAAcQ,MAAM,CAACC,OAArB;MACAF,KAAK,CAACN,MAAN,GAAeH,MAAM,CAACgB,OAAtB;IACD,CATY;IAWb,CAACjB,UAAU,CAACkB,QAAX,CAAoBH,IAArB,GAA6BL,KAAD,IAAW;MACrCA,KAAK,CAACN,MAAN,GAAeH,MAAM,CAACkB,KAAtB;MACAT,KAAK,CAACP,KAAN,GAAc,EAAd;IACD;EAdY;AARc,CAAD,CAA9B;AA0BA,OAAO,MAAM;EAAEM;AAAF,IAAeH,UAAU,CAACc,OAAhC;AAEP,eAAed,UAAU,CAACe,OAA1B"},"metadata":{},"sourceType":"module"}