{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport card from \"./cards/slice\";\nimport filters from './filter/filterSlice';\nimport auth from './authStore/authSlice';\nexport const store = configureStore({\n  reducer: {\n    card,\n    filters,\n    auth\n  }\n});\nexport const useAppSelector = useSelector;\nexport const useAppDispatch = () => {\n  _s();\n\n  return useDispatch();\n};\n\n_s(useAppDispatch, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n  return [useDispatch];\n});","map":{"version":3,"names":["configureStore","useSelector","useDispatch","card","filters","auth","store","reducer","useAppSelector","useAppDispatch"],"sources":["/home/pups/git-project/nft_store/client/src/redux/store.ts"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport { useSelector } from \"react-redux\";\nimport { TypedUseSelectorHook, useDispatch } from \"react-redux\";\nimport card from \"./cards/slice\";\nimport filters from './filter/filterSlice'\nimport auth from './authStore/authSlice'\nexport const store = configureStore({\n  reducer: {\n    card,\n    filters,\n    auth\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\ntype AppDispatch = typeof store.dispatch;\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\n"],"mappings":";;AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAA+BC,WAA/B,QAAkD,aAAlD;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAO,MAAMC,KAAK,GAAGN,cAAc,CAAC;EAClCO,OAAO,EAAE;IACPJ,IADO;IAEPC,OAFO;IAGPC;EAHO;AADyB,CAAD,CAA5B;AAUP,OAAO,MAAMG,cAA+C,GAAGP,WAAxD;AAIP,OAAO,MAAMQ,cAAc,GAAG;EAAA;;EAAA,OAAMP,WAAW,EAAjB;AAAA,CAAvB;;GAAMO,c;UAAuBP,W"},"metadata":{},"sourceType":"module"}