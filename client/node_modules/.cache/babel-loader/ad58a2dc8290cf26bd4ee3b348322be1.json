{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  open: false,\n  tabIndex: 0\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    setOpen(state, action) {\n      state.open = action.payload;\n    },\n\n    setTabIndex(state, action) {\n      state.tabIndex = action.payload;\n    }\n\n  }\n});\nexport const {\n  setOpen,\n  setTabIndex\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","open","tabIndex","authSlice","name","reducers","setOpen","state","action","payload","setTabIndex","actions","reducer"],"sources":["/home/pups/git-project/nft_store/client/src/redux/authStore/authSlice.ts"],"sourcesContent":["import { createSlice} from \"@reduxjs/toolkit\";\nimport { AuthSlice } from \"./types\";\n\nconst initialState:AuthSlice = { \n   open:false,\n   tabIndex:0\n}   \n\nconst authSlice = createSlice ({\n    name: 'auth',\n    initialState,\n    reducers: {\n       setOpen(state, action){\n        state.open = action.payload\n       },\n        setTabIndex(state, action){\n         state.tabIndex = action.payload\n        }\n    }\n})\n\nexport const { setOpen, setTabIndex } = authSlice.actions;\n\nexport default authSlice.reducer;"],"mappings":"AAAA,SAASA,WAAT,QAA2B,kBAA3B;AAGA,MAAMC,YAAsB,GAAG;EAC5BC,IAAI,EAAC,KADuB;EAE5BC,QAAQ,EAAC;AAFmB,CAA/B;AAKA,MAAMC,SAAS,GAAGJ,WAAW,CAAE;EAC3BK,IAAI,EAAE,MADqB;EAE3BJ,YAF2B;EAG3BK,QAAQ,EAAE;IACPC,OAAO,CAACC,KAAD,EAAQC,MAAR,EAAe;MACrBD,KAAK,CAACN,IAAN,GAAaO,MAAM,CAACC,OAApB;IACA,CAHM;;IAINC,WAAW,CAACH,KAAD,EAAQC,MAAR,EAAe;MACzBD,KAAK,CAACL,QAAN,GAAiBM,MAAM,CAACC,OAAxB;IACA;;EANK;AAHiB,CAAF,CAA7B;AAaA,OAAO,MAAM;EAAEH,OAAF;EAAWI;AAAX,IAA2BP,SAAS,CAACQ,OAA3C;AAEP,eAAeR,SAAS,CAACS,OAAzB"},"metadata":{},"sourceType":"module"}